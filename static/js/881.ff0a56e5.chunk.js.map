{"version":3,"file":"static/js/881.ff0a56e5.chunk.js","mappings":"mMAyCA,UArCe,WACb,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,IAAA,6CAC6CN,EAD7C,YACgE,CAC5DO,OAAQ,CACNC,QAAS,sCAGZC,MAAK,SAAAC,GACJN,EAAWM,EAASC,KAAKC,QAC1B,IACAC,OAAM,SAAAC,GACLC,QAAQD,MAAM,gCAAiCA,EAChD,GACJ,GAAE,CAACd,KAGF,gBAAKgB,UAAU,iBAAf,SACGb,EAAQc,OAAS,GAChB,wBACGd,EAAQe,KAAI,SAAAC,GAAM,OACjB,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,OAQrB,kDAIP,C","sources":["components/Review.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Review = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(`https://api.themoviedb.org/3/movie/${movieId}/reviews`, {\n        params: {\n          api_key: '488a10199f756ebd19425cffe6e22e26',\n        },\n      })\n      .then(response => {\n        setReviews(response.data.results);\n      })\n      .catch(error => {\n        console.error('Error fetching movie reviews:', error);\n      });\n  }, [movieId]);\n\n  return (\n    <div className=\"container mt-4\">\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <p>Author: {review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No reviews available.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Review;\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","axios","params","api_key","then","response","data","results","catch","error","console","className","length","map","review","author","content","id"],"sourceRoot":""}