{"version":3,"file":"static/js/106.90fc33c6.chunk.js","mappings":"2KAwBA,UArBa,SAAC,GAAc,IAAZA,EAAW,EAAXA,KACd,OACE,gBAAKC,UAAU,MAAf,SACGD,EAAKE,KAAI,SAAAC,GAAK,OACb,iBAAKF,UAAU,gBAAf,WACE,gBACEG,IAAG,0CAAqCD,EAAME,cAC9CC,IAAKH,EAAMI,KACXN,UAAU,eAEZ,cAAGA,UAAU,OAAb,SAAqBE,EAAMI,SANOJ,EAAMK,GAD7B,KAYpB,C,iHCkFD,UA9FqB,WACnB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOX,EAAP,KAAac,EAAb,KACA,GAA8BH,EAAAA,EAAAA,UAAS,IAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KACA,GAAgCL,EAAAA,EAAAA,WAAS,GAAzC,eAAOM,EAAP,KAAiBC,EAAjB,KACA,GAAsCP,EAAAA,EAAAA,WAAS,GAA/C,eAAOQ,EAAP,KAAoBC,EAApB,KA2CA,OAzCAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,IAAA,6CAC6Cb,GAAW,CACpDc,OAAQ,CACNC,QAAS,sCAGZC,MAAK,SAAAC,GACJb,EAAgBa,EAASC,KAC1B,IACAC,OAAM,SAAAC,GACLC,QAAQD,MAAM,gCAAiCA,EAChD,IAEHP,EAAAA,EAAAA,IAAA,6CAC6Cb,EAD7C,YACgE,CAC5Dc,OAAQ,CACNC,QAAS,sCAGZC,MAAK,SAAAC,GACJZ,EAAQY,EAASC,KAAK3B,KACvB,IACA4B,OAAM,SAAAC,GACLC,QAAQD,MAAM,6BAA8BA,EAC7C,IAEHP,EAAAA,EAAAA,IAAA,6CAC6Cb,EAD7C,YACgE,CAC5Dc,OAAQ,CACNC,QAAS,sCAGZC,MAAK,SAAAC,GACJV,EAAWU,EAASC,KAAKI,QAC1B,IACAH,OAAM,SAAAC,GACLC,QAAQD,MAAM,gCAAiCA,EAChD,GACJ,GAAE,CAACpB,KAGF,iBAAKR,UAAU,iBAAf,WACE,SAAC,KAAD,CAAM+B,GAAG,IAAI/B,UAAU,uBAAvB,sBAGA,iBAAKA,UAAU,MAAf,WACE,4BACE,wBAAKW,EAAaqB,SAClB,gBACE7B,IAAG,0CAAqCQ,EAAasB,aACrD5B,IAAKM,EAAaqB,MAClBhC,UAAU,kBAGd,4BACE,eAAGA,UAAU,OAAb,qBAA6BW,EAAauB,iBAC1C,yCAAiBvB,EAAawB,aAC9B,kCACS,IACNxB,EAAayB,QACZzB,EAAayB,OAAOnC,KAAI,SAAAoC,GAAK,OAAIA,EAAM/B,IAAV,IAAgBgC,KAAK,gBAI1D,eACEC,QAAS,kBAAMtB,GAAaD,EAAnB,EACTwB,MAAO,CAAEC,OAAQ,WACjBzC,UAAU,4BAHZ,kBAOCgB,IAAY,SAAC,UAAD,CAAMjB,KAAMA,IA9B3B,KA+BE,eACEwC,QAAS,kBAAMpB,GAAgBD,EAAtB,EACTsB,MAAO,CAAEC,OAAQ,WACjBzC,UAAU,uBAHZ,qBAOCkB,IAAe,SAAC,UAAD,CAASJ,QAASA,IAAa,MAIpD,C,mDCxED,UAvBgB,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QACjB,OACE,yBACGA,EAAQ4B,OAAS,GAChB,wBACG5B,EAAQb,KAAI,SAAA0C,GAAM,OACjB,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOpC,GADC,OAQrB,kDAIP,C","sources":["components/Cast.jsx","components/MovieDetails.jsx","components/Review.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Cast = ({ cast }) => {\n  return (\n    <div className=\"row\">\n      {cast.map(actor => (\n        <div className=\"col-md-3 mb-3\" key={actor.id}>\n          <img\n            src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`}\n            alt={actor.name}\n            className=\"img-fluid\"\n          />\n          <p className=\"mt-2\">{actor.name}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nCast.propTypes = {\n  cast: PropTypes.array.isRequired,\n};\n\nexport default Cast;\n","import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Cast from './Cast'; // Import the Cast component\nimport Reviews from './Review'; // Import the Reviews component\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState({});\n  const [cast, setCast] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const [showCast, setShowCast] = useState(false);\n  const [showReviews, setShowReviews] = useState(false);\n\n  useEffect(() => {\n    axios\n      .get(`https://api.themoviedb.org/3/movie/${movieId}`, {\n        params: {\n          api_key: '488a10199f756ebd19425cffe6e22e26',\n        },\n      })\n      .then(response => {\n        setMovieDetails(response.data);\n      })\n      .catch(error => {\n        console.error('Error fetching movie details:', error);\n      });\n\n    axios\n      .get(`https://api.themoviedb.org/3/movie/${movieId}/credits`, {\n        params: {\n          api_key: '488a10199f756ebd19425cffe6e22e26',\n        },\n      })\n      .then(response => {\n        setCast(response.data.cast);\n      })\n      .catch(error => {\n        console.error('Error fetching movie cast:', error);\n      });\n\n    axios\n      .get(`https://api.themoviedb.org/3/movie/${movieId}/reviews`, {\n        params: {\n          api_key: '488a10199f756ebd19425cffe6e22e26',\n        },\n      })\n      .then(response => {\n        setReviews(response.data.results);\n      })\n      .catch(error => {\n        console.error('Error fetching movie reviews:', error);\n      });\n  }, [movieId]);\n\n  return (\n    <div className=\"container mt-4\">\n      <Link to=\"/\" className=\"btn btn-primary mb-3\">\n        Go back\n      </Link>\n      <div className=\"row\">\n        <div>\n          <h2>{movieDetails.title}</h2>\n          <img\n            src={`https://image.tmdb.org/t/p/w300/${movieDetails.poster_path}`}\n            alt={movieDetails.title}\n            className=\"img-fluid\"\n          />\n        </div>\n        <div>\n          <p className=\"mt-2\">Rating: {movieDetails.vote_average}</p>\n          <p>Description: {movieDetails.overview}</p>\n          <p>\n            Genre:{' '}\n            {movieDetails.genres &&\n              movieDetails.genres.map(genre => genre.name).join(', ')}\n          </p>\n        </div>\n      </div>\n      <h3\n        onClick={() => setShowCast(!showCast)}\n        style={{ cursor: 'pointer' }}\n        className=\"btn btn-primary mb-3 me-3\"\n      >\n        Cast\n      </h3>\n      {showCast && <Cast cast={cast} />} {/* Use the Cast component */}\n      <h3\n        onClick={() => setShowReviews(!showReviews)}\n        style={{ cursor: 'pointer' }}\n        className=\"btn btn-primary mb-3\"\n      >\n        Reviews\n      </h3>\n      {showReviews && <Reviews reviews={reviews} />}{' '}\n      {/* Use the Reviews component */}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Reviews = ({ reviews }) => {\n  return (\n    <div>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <p>Author: {review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No reviews available.</p>\n      )}\n    </div>\n  );\n};\n\nReviews.propTypes = {\n  reviews: PropTypes.array.isRequired,\n};\n\nexport default Reviews;\n"],"names":["cast","className","map","actor","src","profile_path","alt","name","id","movieId","useParams","useState","movieDetails","setMovieDetails","setCast","reviews","setReviews","showCast","setShowCast","showReviews","setShowReviews","useEffect","axios","params","api_key","then","response","data","catch","error","console","results","to","title","poster_path","vote_average","overview","genres","genre","join","onClick","style","cursor","length","review","author","content"],"sourceRoot":""}