{"version":3,"file":"static/js/221.562e227e.chunk.js","mappings":"6MAkFA,UA9Ee,WACb,OAAsCA,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0CF,EAAAA,EAAAA,UAAS,IAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQL,EAAaM,IAAI,SAC3BD,IACFT,EAAeS,GACfE,EAAaF,GAEhB,GAAE,CAACL,IAEJ,IAAMO,EAAe,SAAAF,GACnBG,EAAAA,EAAAA,IACO,4CAA6C,CAChDC,OAAQ,CACNC,QAAS,mCACTL,MAAOA,KAGVM,MAAK,SAAAC,GACJd,EAAiBc,EAASC,KAAKC,QAChC,IACAC,OAAM,SAAAC,GACLC,QAAQD,MAAM,0BAA2BA,EAC1C,GACJ,EASD,OACE,iBAAKE,UAAU,iBAAf,WACE,2CACA,gBAAKA,UAAU,MAAf,UACE,gBAAKA,UAAU,WAAf,UACE,iBAAMC,SAZO,SAAAC,GACnBA,EAAMC,iBACNrB,EAAasB,IAAI,QAAS3B,GAC1BM,EAAgBD,GAChBO,EAAaZ,EACd,EAOO,UACE,iBAAKuB,UAAU,mBAAf,WACE,kBACEK,KAAK,OACLL,UAAU,oBACVM,YAAY,wBACZC,MAAO9B,EACP+B,SAAU,SAAAN,GAAK,OAAIxB,EAAewB,EAAMO,OAAOF,MAAhC,KAEjB,gBAAKP,UAAU,qBAAf,UACE,mBAAQA,UAAU,kBAAkBK,KAAK,SAAzC,gCAQV,gBAAKL,UAAU,MAAf,SACGrB,EAAc+B,KAAI,SAAAC,GAAK,OACtB,gBAAKX,UAAU,gBAAf,UACE,UAAC,KAAD,CAAMY,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAM/B,GAAhD,WACE,gBACEgC,IAAG,0CAAqCL,EAAMM,aAC9CC,IAAKP,EAAMQ,MACXnB,UAAU,eAEZ,cAAGA,UAAU,OAAb,SAAqBW,EAAMQ,YAPKR,EAAME,GADpB,QAe/B,C","sources":["components/Movies.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (query) {\n      setSearchQuery(query);\n      searchMovies(query);\n    }\n  }, [searchParams]);\n\n  const searchMovies = query => {\n    axios\n      .get('https://api.themoviedb.org/3/search/movie', {\n        params: {\n          api_key: '488a10199f756ebd19425cffe6e22e26',\n          query: query,\n        },\n      })\n      .then(response => {\n        setSearchResults(response.data.results);\n      })\n      .catch(error => {\n        console.error('Error searching movies:', error);\n      });\n  };\n\n  const handleSearch = event => {\n    event.preventDefault();\n    searchParams.set('query', searchQuery);\n    setSearchParams(searchParams);\n    searchMovies(searchQuery);\n  };\n\n  return (\n    <div className=\"container mt-4\">\n      <h2>Search Movies</h2>\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <form onSubmit={handleSearch}>\n            <div className=\"input-group mb-3\">\n              <input\n                type=\"text\"\n                className=\"form-control me-3\"\n                placeholder=\"Search for a movie...\"\n                value={searchQuery}\n                onChange={event => setSearchQuery(event.target.value)}\n              />\n              <div className=\"input-group-append\">\n                <button className=\"btn btn-primary\" type=\"submit\">\n                  Search\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n      <div className=\"row\">\n        {searchResults.map(movie => (\n          <div className=\"col-md-3 mb-3\" key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                alt={movie.title}\n                className=\"img-fluid\"\n              />\n              <p className=\"mt-2\">{movie.title}</p>\n            </Link>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["useState","searchQuery","setSearchQuery","searchResults","setSearchResults","useSearchParams","searchParams","setSearchParams","location","useLocation","useEffect","query","get","searchMovies","axios","params","api_key","then","response","data","results","catch","error","console","className","onSubmit","event","preventDefault","set","type","placeholder","value","onChange","target","map","movie","to","id","state","from","src","poster_path","alt","title"],"sourceRoot":""}